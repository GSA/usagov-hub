<?php

function cmp_sitemap_uploader_menu()
{

    $items = array();

    // Configuration page URL handler
    $items['admin/sitemap/settings'] = array(
        'title' => 'Update Sitemap',
        'description' => 'Sitemap Setting',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cmp_sitemap_settings_form'),
        'access callback' => 'check_access_to_sitemap_upload',
        'type' => MENU_NORMAL_ITEM
    );
    $items['admin/sitemap_upload'] = array(
        'title' => 'Update Sitemap',
        'description' => 'Update sitemap',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('cmp_sitemap_form'),
        'access callback' => 'check_access_to_sitemap_upload',
        'type' => MENU_NORMAL_ITEM
    );

    return $items;
}

function check_access_to_sitemap_upload(){
    return true;
}

function cmp_sitemap_settings_form(){
    $form['sitemap_usa'] = array(
        '#type' => 'textfield',
        '#title' => 'USA Sitemap Multimedia Asset ID',
        '#default_value' => variable_get('sitemap_usa',''),
    );

    $form['sitemap_gob'] = array(
        '#type' => 'textfield',
        '#title' => 'USAGov en Español Sitemap Multimedia Asset ID',
        '#default_value' => variable_get('sitemap_gob',''),
    );

    return system_settings_form($form);
}

function cmp_sitemap_form(){

    $form['ignoringURLs'] = array(
        '#type'=>'textarea',
        '#title'=>t('URLs need to be ignored')
    );
    $form['filexml'] = array(
        '#type' => 'file',
        '#title' => t('Sitemap'),
        '#description' => t('Upload a sitemap, allowed extensions: XML'),
    );
    $form['Update'] = array(
        '#type' => 'submit',
        '#value' => t('Submit')
    );

    if (empty(variable_get('sitemap_gob')) || empty(variable_get('sitemap_usa')) ) {
        $form["Update"]['#disabled'] = TRUE;
        $form["Update"]['#suffix'] = "Please create multimedia assets for USA and USAGov en Español sitemap and provide Asset IDs <a href='/admin/sitemap/settings'>here.</a>";
    }

    return $form;
}

function cmp_sitemap_form_validate($form, &$form_state){
    /*
        if (! file_save_upload('filexml', $validators, 'public://',FILE_EXISTS_REPLACE)) {
            form_set_error('filexml', t('Unable to copy upload file to'));
        }*/
}

function cmp_sitemap_form_submit(&$form, &$form_state){

    $validators = array(
        'file_validate_extensions' => array('xml'),
    );

    $ignoreURLs = array();
    if (isset($form_state['values']['ignoringURLs']) && !empty($form_state['values']['ignoringURLs'])) {
        $ignoreURLs = explode(PHP_EOL, $form_state['values']['ignoringURLs']);
    }
    foreach($ignoreURLs as $iUrl){
        $ignoreURLscl[] = trim($iUrl);
    }

    if ($file = file_save_upload('filexml', $validators, 'public://',FILE_EXISTS_REPLACE)) {

        $contents = file_get_contents($file->uri);
        $xml = simplexml_load_string($contents);
        $json = json_encode($xml);
        $array = json_decode($json,TRUE);
        $ignoredURLs = array();
        $USA_sitemap = array();
        $Gob_sitemap = array();
        
        if (isset($array['url'])) {
            foreach ($array['url'] as $url) {

                if (!in_array($url['loc'], $ignoreURLscl)) {
                    if (isset($url['loc']) && strpos($url['loc'], 'espanol') === false) {
                        $USA_sitemap[] = $url;
                    } else {
                        $Gob_sitemap[] = $url;
                    }
                }
                else{
                    $ignoredURLs[] = $url['loc'];
                }
            }
        }
        $node_gob = node_load(variable_get('sitemap_gob'));
        $node_usa = node_load(variable_get('sitemap_usa'));

        $xml_data_gob = '<?xml version="1.0"?><urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd http://www.google.com/schemas/sitemap-image/1.1/sitemap-image.xsd http://www.google.com/schemas/sitemap-mobile/1.0/sitemap-mobile.xsd http://www.google.com/schemas/sitemap-video/1.1/sitemap-video.xsd" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xmlns:mobile="http://www.google.com/schemas/sitemap-mobile/1.0" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1"></urlset>';
        $xml_data_usa = '<?xml version="1.0"?><urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xhtml="http://www.w3.org/1999/xhtml" xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd http://www.google.com/schemas/sitemap-image/1.1/sitemap-image.xsd http://www.google.com/schemas/sitemap-mobile/1.0/sitemap-mobile.xsd http://www.google.com/schemas/sitemap-video/1.1/sitemap-video.xsd" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1" xmlns:mobile="http://www.google.com/schemas/sitemap-mobile/1.0" xmlns:video="http://www.google.com/schemas/sitemap-video/1.1"></urlset>';
        $file_usa = file_save_data(arrayToXml($USA_sitemap, $xml_data_usa),'s3://usa_sitemap.xml', FILE_EXISTS_REPLACE);
        $file_usa->status = 1;

        $file_gob = file_save_data(arrayToXml($Gob_sitemap, $xml_data_gob),'s3://espanol_sitemap.xml', FILE_EXISTS_REPLACE);
        $file_gob->status = 1;

        $node_gob->field_file_media['und'][0] = (array)$file_gob;
        $node_usa->field_file_media['und'][0] = (array)$file_usa;
        node_save($node_gob);
        node_save($node_usa);

        drupal_set_message("Sitemaps have been updated in 1-3 seconds. USA Sitemap has ". count($USA_sitemap). ' URLS in it. USA Espanol Sitemap has ' .count($Gob_sitemap).' URLS in it.', 'status' );
        foreach($ignoredURLs as $iURL){
            drupal_set_message('"'.$iURL.'" is not included in new sitemap.','status');
        }
    }
}

function arrayToXml($array, $rootElement = null, $xml = null) {
    $_xml = $xml;

    // If there is no Root Element then insert root
    if ($_xml === null) {
        $_xml = new SimpleXMLElement($rootElement !== null ? $rootElement : '<root/>');
    }

    // Visit all key value pair
    foreach ($array as $k => $v) {
        if (is_array($v)) {
            arrayToXml($v, 'url', $_xml->addChild('url'));
        }
        else {
            $_xml->addChild($k, $v);
        }
    }

    return $_xml->asXML();
}

