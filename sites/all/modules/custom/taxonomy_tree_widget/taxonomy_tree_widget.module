<?php
function taxonomy_tree_widget_menu()
{
    $items = array();
    // Configuration page
    $items['admin/taxonomy-tree-widget'] = array(
        'title'           => 'Taxonomy Tree Widget',
        'description'     => 'Taxonomy Tree Widget',
        'page callback'   => 'drupal_get_form',
		'page arguments'  => array('_draw_taxo_tree'),
		'access callback' => true,
        'file'            => 'tree_class.inc'
    );

    $items['admin/taxonomy-tree-widget/ajax/fulltree'] = array(
        'title'           => 'Taxonomy Tree Widget',
        'description'     => 'Taxonomy Tree Widget',
        'page callback'   => '_dan_json_tree_view',
		'access callback' => true,
        'file'            => 'tree_class.inc'
    );
	
	
    return $items;
}


function _dan_json_tree_view()
{
	$site_structure_tree = new JSTaxTree( 42 );
	echo drupal_json_output( $site_structure_tree->json_obj );
	
}
function _draw_taxo_tree()
{
	
	drupal_add_css('sites/all/modules/custom/taxonomy_tree_widget/dist/themes/default/style.min.css','file');
	drupal_add_css('
				   html, body { background:#ebebeb; font-size:10px; font-family:Verdana; margin:0; padding:0; }
					#container { min-width:320px; margin:0px auto 0 auto; background:white; border-radius:0px; padding:0px; overflow:hidden; }
					#tree { float:left; min-width:319px; border-right:1px solid silver; overflow:auto; padding:0px 0; }
					#data { margin-left:320px; }
					#data textarea { margin:0; padding:0; height:100%; width:100%; border:0; background:white; display:block; line-height:18px; }
					#data, #code { font: normal normal normal 12px/18px "Consolas", monospace !important; }
					','inline');
	drupal_add_js("//ajax.googleapis.com/ajax/libs/jquery/1/jquery.min.js","external");
	drupal_add_js("sites/all/modules/custom/taxonomy_tree_widget/dist/jstree.min.js","file");
		
	drupal_add_js("jQuery(document).ready(function ()
				  {
					jQuery(window).resize(function () {
						var h = Math.max($(window).height() - 0, 420);
						$('#container, #data, #tree, #data .content').height(h).filter('.default').css('lineHeight', h + 'px');
					}).resize();
					
					
					jQuery('#tree').jstree({
						'core' : {
							'data' : {
								'url' : '/admin/taxonomy-tree-widget/ajax/fulltree',
								'data' : function (node) {
									return { 'id' : node.id };
								}
							},
							'check_callback' : true,
							'themes' : {
								'responsive' : false
							}
						},
						'force_text' : true,
						'plugins' : ['changed','state','dnd','contextmenu','wholerow']
						
					});
					
					jQuery('#tree').on('changed.jstree', function (e, data) {
						var trem_id=data.changed.selected;
						
						$('#frame').attr('src', '/taxonomy/term/'+trem_id+'/edit?hideHeader=1');
						
					})
					
					
				  })
				  
				  
				  function create_term()
					{
						var ref = $('#tree').jstree(true),
						sel = ref.get_selected();
						if(!sel.length) { return false; }
						term_id=sel[0];
						sel = sel[0];
						
						$.get('?operation=insert_term', { 'parent_id' : term_id, 'text' : sel[1] })
							.done(function (d) {
								sel = ref.create_node(sel);
			
							})
							.fail(function () {
								ref.edit(sel);
							});
					}
				  ;", 'inline');
	
	$form = array();

    $form['taxonomy_term_add'] = array(
      '#type' => 'item',
      '#title' => 'Taxonomy Term Operations',
      '#markup' => '
      <div class="col-md-4 col-sm-8 col-xs-8">
				<button type="button" class="btn btn-success btn-sm" onclick="create_term();"><i class="glyphicon glyphicon-asterisk"></i> Create</button>
				<button type="button" class="btn btn-danger btn-sm" onclick="demo_delete();"><i class="glyphicon glyphicon-remove"></i> Delete</button>
	</div>
	<div id="tree"></div>
	<div id="data">
		<div class="content code" style="display:none;"><textarea id="code" readonly="readonly"></textarea></div>
		<div class="content folder" style="display:none;"></div>
		<div class="content image" style="display:none; position:relative;"><img src="" alt="" style="display:block; position:absolute; left:50%; top:50%; padding:0; max-height:90%; max-width:90%;" /></div>
		<div class="content default" style="text-align:center;"><iframe id="frame" src="" width="80%" height="600px" style="min-height: 200px; max-height: 700px;">
     </iframe></div>
				
	</div>'
    );
	
	if(isset($_GET['operation'])) {
		$fs = new JSTaxTree(42);
		try {
			$rslt = null;
			switch($_GET['operation']) {
				case 'write_json':
					$vocab_name = isset($_GET['vocab_name']) && $_GET['vocab_name'] !== '' ? $_GET['vocab_name'] : '';
					//$fs->write_json($vocab_name);
					break;
				case 'insert_term':
					$parent_id = isset($_GET['parent_id']) && $_GET['parent_id'] !== '#' ? (int)$_GET['parent_id'] : 0;
					$term_name = 'New Child Node';
					$temp = $fs->add_term($parent_id, $term_name);
					$rslt = array('id' => $temp);
					break;
				case 'rename_node':
					$node = isset($_GET['id']) && $_GET['id'] !== '#' ? (int)$_GET['id'] : 0;
					$rslt = $fs->rn($node, array('nm' => isset($_GET['text']) ? $_GET['text'] : 'Renamed node'));
					break;
				case 'delete_node':
					$node = isset($_GET['id']) && $_GET['id'] !== '#' ? (int)$_GET['id'] : 0;
					$rslt = $fs->rm($node);
					break;
				case 'move_node':
					$node = isset($_GET['id']) && $_GET['id'] !== '#' ? (int)$_GET['id'] : 0;
					$parn = isset($_GET['parent']) && $_GET['parent'] !== '#' ? (int)$_GET['parent'] : 0;
					$rslt = $fs->mv($node, $parn, isset($_GET['position']) ? (int)$_GET['position'] : 0);
					break;
				case 'copy_node':
					$node = isset($_GET['id']) && $_GET['id'] !== '#' ? (int)$_GET['id'] : 0;
					$parn = isset($_GET['parent']) && $_GET['parent'] !== '#' ? (int)$_GET['parent'] : 0;
					$rslt = $fs->cp($node, $parn, isset($_GET['position']) ? (int)$_GET['position'] : 0);
					break;
				default:
					throw new Exception('Unsupported operation: ' . $_GET['operation']);
					break;
			}
			header('Content-Type: application/json; charset=utf-8');
			echo json_encode($rslt);
		}
		catch (Exception $e) {
			header($_SERVER["SERVER_PROTOCOL"] . ' 500 Server Error');
			header('Status:  500 Server Error');
			echo $e->getMessage();
		}
		
	
	}
	
	return $form;
}

?>

