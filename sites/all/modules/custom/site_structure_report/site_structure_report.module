<?php

/*
* Purpose of this module is to create site structure report into csv file
*
*/

function site_structure_report_menu() {
    $items = array();
    $items['site-structure-taxonomy-csv'] = array(
        'title' => 'Generate Site Structure Taxonomy Report',
        'page callback' => '_prepare_report',
        'type' => MENU_NORMAL_ITEM,
        'access callback' => 'check_access_to_site_structure'
    );

    $items['asset-topic-taxonomy-csv'] = array(
        'title' => 'Generate Asset Topic Taxonomy Report',
        'page callback' => '_prepare_att_report',
        'type' => MENU_NORMAL_ITEM,
        'access callback' => 'check_access_to_site_structure'
    );

    $items['content-reports'] = array(
        'title' => 'Download Reports',
        'page callback' => '_report_landing_page_display',
        'type' => MENU_NORMAL_ITEM,
        'access callback' => 'check_access_to_site_structure'
    );

    $items['sst-onetime-csv'] = array(
        'title' => 'Generate Site Structure Taxonomy Onetime Report',
        'page callback' => '_gen_report',
        'type' => MENU_NORMAL_ITEM,
        'access callback' => 'check_access_to_site_structure'
    );

    return $items;
}

$site_structure_array=array();

function check_access_to_site_structure()
{
    return user_access('edit terms in 42');
}

function _report_landing_page_display() {

    $output = "";
    $thisFile = basename(__FILE__);
    $prependMarkup = '<li><a  rendersource="'.$thisFile.'" href="javascript: _getReport(\''.uniqid().'\'); void(0);">List of Content Assets Report</a></li>';
    $output = '<ul>'.$prependMarkup.'</ul>'.$output;
    drupal_add_js('sites/all/modules/custom/site_structure_report/Reports-ExportToCSV-Asset.js');
    return $output;
}
function _prepare_att_report() {

    $reportsTATR = variable_get('reports_ar', array());

    // Clear anything Drupal has tried printing/rendering so far
    @ob_end_clean();
    while( @ob_end_clean() );

    // Argument validation
    if ( empty($_REQUEST['reqid']) ) {
        exit('Missing reqid argument');
    }
    $reqid = $_REQUEST['reqid'];

    // Check to see if another thread is working on this report already
    if ( isset($reportsTATR[$reqid]) && $reportsTATR[$reqid] === 'working' ) {
        exit('working');
    }

    // Check to see if another thread has already completed this report [of report-id reqid]
    if ( isset($reportsTATR[$reqid]) && $reportsTATR[$reqid] === 'complete' ) {

        // So this report must be completed now - but~ is the report saved on THIS server?
        if ( !file_exists("sites/default/files/report_ar_{$reqid}.csv") ) {

            /* Nope, so tell the client its still in the works, it's next request will
            probably hit a different server (the one where the report is saved) */
            exit('working');

        } else {

            /* it is, so read this out to the client - JavaScript will take it from there (it
            will simulate the download) */
            readfile("sites/default/files/report_ar_{$reqid}.csv");
            exit();
        }
    }

    /*  ==================================================
        FROM THIS POINT ON WE ASSUME WE ARE THE FIRST CALL FOR THIS $reqid, FROM
        HERE WE WILL BUILD THE ACTUAL REPORT.
        ==================================================
    */

    /* Place a flag in the database, visible to all servers and PHP-threads that
    this reqid is in the works */
    $reportsTATR[$reqid] = 'working';
    variable_set('reports_ar', $reportsTATR);

    // foreach ( $topTerms as $topTerm ) {
    $rows= _compileAssetTopicTaxonomyReportToCSV();


    // Open the file for writing
    $h = fopen("sites/default/files/report_ar_{$reqid}.csv", 'w');
    if ( $h === false ) {
        exit('error');
    }
    // Write the CSV headers
    fwrite($h, '"counter","Asset Node ID number","Title","CMP Edit Link","For Use By","Owner","Status","Date Last Reviewed", "Language", "Type of Asset", "# of pages found", "Assigned to taxonomy"');
    fwrite($h, "\n");

    // Write the CSV content
    $newrows = array();
    $counter =0 ;
    foreach($rows as $row){
        $counter++;
        $row['counter'] =$counter;
        $newrows[] =$row;
    }

    foreach ( $newrows as $row ) {
        foreach ( array_values($row) as $cellId => $cellValue) {
            if ( $cellId != 0 ) {
                fwrite($h, ",");
            }
            fwrite($h, "\"".$cellValue."\"");
        }
        fwrite($h, "\n");
    }
    fclose($h);

    /* Place a flag in the database, visible to all servers and PHP-threads that
    this reqid is created and complete */
    $reportsTATR[$reqid] = 'complete';
    variable_set('reports_ar', $reportsTATR);

    exit('working');
}

function _compileAssetTopicTaxonomyReportToCSV() {
    $counter =1;
    // Get the nodes associated with this Topic
    $nodes = db_query("SELECT nid FROM {node} WHERE type IN ('file_content_type', 'html_content_type', 'multimedia_content_type', 'text_content_type')");

    foreach ($nodes as $n ) {
        $node = node_load($n->nid);
        // Get the 'For Use By' text for this node
        $forUseBy = array();
        if ($node->type == 'text_content_type') {
            foreach ($node->field_for_use_by_text['und'] as $valCont) {
                $forUseBy[] = $valCont['value'];
            }
        }
        if ($node->type == 'multimedia_content_type' || $node->type == 'html_content_type' || $node->type == 'file_content_type') {
            foreach ($node->field_for_use_by['und'] as $valCont) {
                $forUseBy[] = $valCont['value'];
            }
        }
        $forUseBy = implode(', ', $forUseBy);

        $last_reviewed = get_node_lastReviewedDate(array($node->nid));

        // Prepare to add new row to the report - for this node under this Asset Topic
        $counter++;
        $newRow = array(
            'counter' => $counter,
            'Asset Node ID number'=>$node->nid,
            'Title' => tssr_sanitzie($node->title),
            'CMP Edit Link' => "https://".$_SERVER['HTTP_HOST']."/node/{$node->nid}/edit",
            'For Use By' => tssr_sanitzie($forUseBy),
            'Owner' => !empty($node->field_owner['und'][0]['target_id'])? tssr_sanitzie((tssr_get_username($node->field_owner['und'][0]['target_id']))) : 'NOT SET IN CMP',
            'Status' => _node_actual_status($node->nid, $node->status),
            'Date Last Reviewed'=>  (isset($last_reviewed))? tssr_sanitzie(date("F d, Y",$last_reviewed)):'NOT SET IN CMP',
            'Language'=> isset($node->field_language['und'][0]['value'])? tssr_sanitzie($node->field_language['und'][0]['value']) : 'NOT SET IN CMP',
            'Type of Asset'=> tssr_sanitzie(node_type_get_name($node)),
            '# of pages found'=> count_findSiteStructTermsThatReferenceAsset($node->nid),
            'Assigned to taxonomy'=>(isset($node->field_asset_topic_taxonomy['und'][0]['tid']) && is_numeric($node->field_asset_topic_taxonomy['und'][0]['tid']))? "Yes":"No"
        );

        // Add new row to the report - for this node under this Asset Topic
        $rows[$node->nid] = $newRow;

    }
    return $rows;
}
function count_findSiteStructTermsThatReferenceAsset($assetNid) {

    $ret = array();

    // Tables to search
    $tables = array(
        "field_data_field_asset_order_carousel",
        "field_data_field_asset_order_content",
        "field_data_field_asset_order_sidebar",
        "field_data_field_asset_order_bottom",
        "field_data_field_home_howdoi_assets",
        "field_data_field_home_alert_asset",
        "field_data_field_home_quote1_asset",
        "field_data_field_home_popular_asset",
        "field_data_field_home_quote2_asset",
        "field_data_field_home_quote3_asset",
        "field_data_field_home_cat2cont_assets",
        "field_data_field_home_quickfindcont_asset"
    );

    // Search the assets tables (on the S.S.-tax-terms)
    foreach ( $tables as $table ) {
        $valueColumn = str_replace('field_data_', '', $table);
        $results = db_query("SELECT entity_id FROM {$table} WHERE {$valueColumn}_target_id={$assetNid}");
        foreach ( $results as $result ) {
            $tid = $result->entity_id;
            $ret[$tid] = $tid;
        }
    }

    return count($ret);
}

function _node_actual_status($nid, $curr_status=-1){

    if ($curr_status == -1){
        $node = node_load($nid);
        $curr_status = $node->status;
    }

    $res = db_query('SELECT deletion_state FROM node_deleted WHERE nid ='.$nid)->fetchField(0);
    if ($res=='soft') {
        $status = 'Soft Deleted';
    }
    elseif($res=='requested') {
        $status = 'Soft Delete Requested';
    }
    elseif(empty($res) && $curr_status==0){
        $status = 'Draft';
    }
    elseif(empty($res) && $curr_status==1) {
        $status = 'Published';
    }
    return $status;
}

function _gen_report(){
    // Crete data array

    $site_structure_array[0]=array('Site', 'Page Title', 'Friendly URL', ' USA.gov Toggle URL', 'GobiernoUSA.gov Toggle URL', 'Kids.gov Toggle URL');

    $get_root_level_site_name = taxonomy_get_tree(42,0,1);
    foreach($get_root_level_site_name as $root_level){
        $site_names[$root_level->tid]=$root_level->name;
    }

    foreach($site_names as $root_tid=>$site_name)
    {
        $get_all_terms=taxonomy_get_tree(42,$root_tid);

        foreach($get_all_terms as $get_term) {
            $site_structure_array[]=get_onetime_child_info_report($get_term->tid,$get_term->depth,$site_name);

        }
    }

    export_to_csv($site_structure_array);
}

function get_onetime_child_info_report($tid, $pos,$site_name){
    global $base_url;


    $get_all_parents=taxonomy_get_parents_all($tid);
    $last_changed_date='-';

    $i=0; $j=0;
    foreach($get_all_parents as $lvl=>$par_info){

        if($par_info->tid!=$tid)
        {
            $page_type_info=$par_info->field_type_of_page_to_generate['und'][0]['value'];
            if($page_type_info=='more' && $site_name!='Kids.USA.gov'){

            }

            else{
                $par_title=$par_info->field_page_title['und'][0]['value'];
                $levels[$i]=$par_title;
                $i++;
            }

            $get_all_par[$j]=$par_info->field_page_title['und'][0]['value'];
            $j++;

        }
        else{
            $get_term=$par_info;
        }

    }
    $site_name=$levels[count($levels)-1];

    $site_structure_array[0]=tssr_sanitzie($site_name) ;

    // page title
    if($get_term->field_page_title){
        $page_title=$get_term->field_page_title['und'][0]['value'];
    }
    else{
        $page_title=$get_term->name;
    }
    $site_structure_array[1]=tssr_sanitzie($page_title);

    // Friendly URL
    if($get_term->field_friendly_url){
        $site_structure_array[2]=$get_term->field_friendly_url['und'][0]['value'];
    }
    else{
        $site_structure_array[2]='NOT SET IN CMP';
    }

    // usa toggle url
    if($get_term->field_usa_gov_toggle_url){
        $site_structure_array[3]=$get_term->field_usa_gov_toggle_url['und'][0]['value'];
    }
    else{
        $site_structure_array[3]='NOT SET IN CMP';
    }

    // gobierno toggle url
    if($get_term->field_gobiernousa_gov_toggle_url){
        $site_structure_array[4]=$get_term->field_gobiernousa_gov_toggle_url['und'][0]['value'];
    }
    else{
        $site_structure_array[4]='NOT SET IN CMP';
    }

    // kids toggle url
    if($get_term->field_kids_gov_toggle_url){
        $site_structure_array[5]=$get_term->field_kids_gov_toggle_url['und'][0]['value'];
    }
    else{
        $site_structure_array[5]='NOT SET IN CMP';
    }

    return $site_structure_array;
}

function _prepare_report()
{

    // Crete data array

    $site_structure_array[0]=array('Site','Owner','Hierarchy Level','Page Type','Topic Desk Replacement','Friendly URL','CMP Edit Link','Page ID','Page Title',
        'Parent Title','Level 6','Level 5', 'Level 4', 'Level 3',' Level 2', 'Level 1', 'USAGov Topic Crosswalk', 'GA style URL', 'VOC tool export URL style','Last Changed Date', 'Assets on Page');

    $get_root_level_site_name = taxonomy_get_tree(42,0,1);
    foreach($get_root_level_site_name as $root_level){
        $site_names[$root_level->tid]=$root_level->name;
    }

    foreach($site_names as $root_tid=>$site_name)
    {
        $get_all_terms=taxonomy_get_tree(42,$root_tid);

        foreach($get_all_terms as $get_term) {
            $site_structure_array[]=get_child_info($get_term->tid,$get_term->depth,$site_name);

        }
    }

    export_to_csv($site_structure_array);

}

function export_to_csv(array &$array)
{
    if (count($array) == 0) {
        return null;
    }
    ob_start();
    $csv_file = fopen("php://output", 'w');

    header('Content-Type: text/csv; charset=utf-8');
    header('Content-Disposition: attachment; filename=data.csv');
    ob_end_clean();
    flush();
    //fputcsv($df, array_keys(reset($array)));
    foreach ($array as $row) {
        fputcsv($csv_file, $row);
    }
    fclose($csv_file);
    die;
}

function get_child_info($tid, $pos,$site_name){

    global $base_url;


    $get_all_parents=taxonomy_get_parents_all($tid);
    $last_changed_date='-';

    $i=0; $j=0;
    foreach($get_all_parents as $lvl=>$par_info){

        if($par_info->tid!=$tid)
        {
            $page_type_info=$par_info->field_type_of_page_to_generate['und'][0]['value'];
            if($page_type_info=='more' && $site_name!='Kids.USA.gov'){

            }

            else{
                $par_title=$par_info->field_page_title['und'][0]['value'];
                $levels[$i]=$par_title;
                $i++;
            }

            $get_all_par[$j]=$par_info->field_page_title['und'][0]['value'];
            $j++;

        }
        else{
            $get_term=$par_info;
        }

    }


    $site_name=$levels[count($levels)-1];

    $site_structure_array[0]=tssr_sanitzie($site_name) ;

    /*if($get_term->changed){
        $last_changed_date =  gmdate("m-d-Y", $get_term->changed);
    }*/
    if ($page_type_info = "generic-content-page"){
        $dt = get_term_lastReviewedDate($tid);
        if (!empty($dt)) {
            $last_changed_date = gmdate("m-d-Y", $dt);
        }
        else{
            $last_changed_date = "N/A. Page is NOT content page";
        }
    }
    else {
        $last_changed_date = "N/A. Page is NOT content page";
    }


    if($get_term->field_term_owner){
        $owner_target_id=$get_term->field_term_owner['und'][0]['target_id'];
        $user_name = db_query("SELECT name FROM {users} WHERE uid = :user_id",array(":user_id"=>$owner_target_id))->fetchAssoc();
        $username = $user_name['name'];
        $site_structure_array[1]=$username;
    }
    else{
        $site_structure_array[1]='NOT SET IN CMP';
    }


    //$position = count((array)$get_all_parents);
    $site_structure_array[2]=$pos+1;

    if($get_term->field_type_of_page_to_generate){
        $page_type = $get_term->field_type_of_page_to_generate['und'][0]['value'];
    }
    else{
        $page_type ='NOT SET IN CMP';
    }

    $site_structure_array[3]=tssr_sanitzie($page_type);

    $help_desk = 'NOT SET IN CMP';
    if (isset($get_term->field_help_desk['und'][0]['tid'])) {
        $help_term = taxonomy_term_load($get_term->field_help_desk['und'][0]['tid']);
        $help_desk = (!empty($help_term))? $help_term->name : '';
    }

    $site_structure_array[4]=tssr_sanitzie($help_desk);

    if($get_term->field_friendly_url){
        $friendly_url = $get_term->field_friendly_url['und'][0]['value'];
    }
    else{
        $friendly_url='NOT SET IN CMP';
    }

    $site_structure_array[5]=tssr_sanitzie($friendly_url);

    $cmp_edit_link=$base_url.'/taxonomy/term/'.$get_term->tid.'/edit';
    $site_structure_array[6]=tssr_sanitzie($cmp_edit_link);

    $site_structure_array[7]=$get_term->tid;

    if($get_term->field_page_title){
        $page_title=$get_term->field_page_title['und'][0]['value'];
    }
    else{
        $page_title=$get_term->name;
    }
    $site_structure_array[8]=tssr_sanitzie($page_title);



    $site_structure_array[9]=tssr_sanitzie($get_all_par[0]);
    $rev_levels = array_reverse($levels);

    $filled_up_levels=count($rev_levels);
    if($filled_up_levels<6){
        for($i=6; $i>$filled_up_levels; $i--)
        {
            $rev_levels[$i] = $page_title;
        }
    }

    $col=10;

    krsort($rev_levels);
    foreach($rev_levels as $level){
        $site_structure_array[$col]=tssr_sanitzie($level);
        $col++;
    }

    $site_structure_array[16]='';
    $ga_style_url='';
    $voc_tool_export_url='';
    if($friendly_url!='NOT SET IN CMP'){
        if($site_name=='USA.gov'){
            $ga_style_url='usa.gov'.$friendly_url;
            $voc_tool_export_url = 'https://www.usa.gov'.$friendly_url;
        }
        if($site_name=='GobiernoUSA.gov'){
            $ga_style_url='gobierno.usa.gov'.$friendly_url;
            $voc_tool_export_url = 'https://gobierno.usa.gov'.$friendly_url;
        }
        if($site_name=='Kids.gov'){
            $ga_style_url='kids.usa.gov'.$friendly_url;
            $voc_tool_export_url = 'https://kids.usa.gov'.$friendly_url;
        }
        if($site_name=='Blog.USA.Gov'){
            $ga_style_url='blog.usa.gov'.$friendly_url;
            $voc_tool_export_url = 'https://blog.usa.gov'.$friendly_url;
        }
    }

    $site_structure_array[17]=tssr_sanitzie($ga_style_url);
    $site_structure_array[18]=tssr_sanitzie($voc_tool_export_url);

    $site_structure_array[19]=tssr_sanitzie($last_changed_date);
    $site_structure_array[20]=count(tssr_getAssetsInSiteStructTerm($get_term));

    return $site_structure_array;
}
